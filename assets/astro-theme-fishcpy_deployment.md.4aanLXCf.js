import{_ as i,c as a,o as t,a2 as e}from"./chunks/framework.BjgyOBYO.js";const c=JSON.parse('{"title":"🚀 部署指南","description":"","frontmatter":{},"headers":[],"relativePath":"astro-theme-fishcpy/deployment.md","filePath":"astro-theme-fishcpy/deployment.md","lastUpdated":1757159653000}'),n={name:"astro-theme-fishcpy/deployment.md"};function l(o,s,r,h,p,d){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="🚀-部署指南" tabindex="-1">🚀 部署指南 <a class="header-anchor" href="#🚀-部署指南" aria-label="Permalink to &quot;🚀 部署指南&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">🤖 AI 辅助编写</p><p>本文档由 AI 辅助编写，内容经过人工审核和优化。如发现任何错误或需要改进的地方，欢迎提交 Issue 或 PR。</p></div><div class="info custom-block"><p class="custom-block-title">📖 官方部署文档</p><p>Astro 支持部署到 Vercel、Netlify、GitHub Pages、Cloudflare Pages 等多种平台。</p><p><strong>我们强烈建议您直接查阅 <a href="https://docs.astro.build/zh-cn/guides/deploy/" target="_blank" rel="noreferrer">Astro 官方部署指南</a>，以获取最准确、最全面的部署信息。</strong></p></div><h2 id="🚀-快速部署指南" tabindex="-1">🚀 快速部署指南 <a class="header-anchor" href="#🚀-快速部署指南" aria-label="Permalink to &quot;🚀 快速部署指南&quot;">​</a></h2><h3 id="_1-上传项目到-github" tabindex="-1">1. 上传项目到 GitHub <a class="header-anchor" href="#_1-上传项目到-github" aria-label="Permalink to &quot;1. 上传项目到 GitHub&quot;">​</a></h3><p>首先，您需要将项目上传到一个 <strong>私有</strong> GitHub 仓库。</p><h4 id="a-创建-github-仓库" tabindex="-1">a. 创建 GitHub 仓库 <a class="header-anchor" href="#a-创建-github-仓库" aria-label="Permalink to &quot;a. 创建 GitHub 仓库&quot;">​</a></h4><ol><li>访问 <a href="https://github.com" target="_blank" rel="noreferrer">GitHub</a> 并登录。</li><li>点击右上角的 &quot;+&quot; 按钮，选择 &quot;New repository&quot;。</li><li>填写仓库信息： <ul><li><strong>Repository name</strong>: 输入您的博客名称（例如 <code>my-blog</code>）。</li><li><strong>Description</strong>: (可选) 简短描述您的博客。</li><li><strong>⚠️ 重要</strong>: 选择 <strong>Private</strong>（私人仓库）以保护您的代码和内容。</li></ul></li><li><strong>不要</strong> 勾选 &quot;Add a README file&quot;、&quot;Add .gitignore&quot; 或 &quot;Choose a license&quot;。</li><li>点击 &quot;Create repository&quot;。</li></ol><h4 id="b-上传本地项目" tabindex="-1">b. 上传本地项目 <a class="header-anchor" href="#b-上传本地项目" aria-label="Permalink to &quot;b. 上传本地项目&quot;">​</a></h4><p>在您的项目文件夹中打开终端，并执行以下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 初始化 Git 仓库（如果尚未初始化）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加所有文件到暂存区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建首次提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Initial commit&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关联远程仓库（请将 URL 替换为您自己的仓库地址）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/your-username/your-repo-name.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 推送到主分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><h3 id="_2-使用内置工作流自动部署" tabindex="-1">2. 使用内置工作流自动部署 <a class="header-anchor" href="#_2-使用内置工作流自动部署" aria-label="Permalink to &quot;2. 使用内置工作流自动部署&quot;">​</a></h3><p>本项目已内置 GitHub Actions 工作流，默认使用 <code>main</code> 分支进行部署。</p><ol><li><strong>推送代码到 <code>main</code> 分支</strong> 将您的代码推送到远程仓库的 <code>main</code> 分支即可触发自动部署。</li><li><strong>在部署平台配置</strong><ul><li>将您的 GitHub 仓库连接到您选择的部署平台（如 Vercel, Netlify）。</li><li>在项目设置中，将部署分支设置为 <code>blog</code>。</li><li><strong>重要</strong>: 如果平台需要选择框架预设，请选择 <strong>Other</strong>。</li></ul></li></ol><h3 id="部署-main-分支或其他分支" tabindex="-1">部署 <code>main</code> 分支或其他分支 <a class="header-anchor" href="#部署-main-分支或其他分支" aria-label="Permalink to &quot;部署 \`main\` 分支或其他分支&quot;">​</a></h3><p>如果您希望从 <code>main</code> 分支或自定义分支进行部署，则需要自行配置构建流程。具体方法请参考 <a href="https://docs.astro.build/zh-cn/guides/deploy/" target="_blank" rel="noreferrer">Astro 官方部署指南</a>。</p>`,16)])])}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
